"use client";

import React, { useState, useMemo } from "react";

import { Metadata } from "next";
import { MainHeading, SubHeading } from "@/components/basics/Heading";
import { Button } from "@/components/ui/button";
import { Plus } from "lucide-react";
import Image from "next/image";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Input } from "@/components/ui/input";
import { useRouter } from "next/navigation";
import Link from "next/link";

const BulletedList = "/assets/bulleted.svg";
const Trash = "/assets/trash.svg";
type Props = {};
export const metadata: Metadata = {
  title: "Hudddle | Workrooms",
  // description: "Generated by create next app",
};

const rooms = [
  {
    roomName: "Design Hub",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Dev Team",
    peopleInRoom: true,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Marketing Chat",
    peopleInRoom: false,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Product Ideas",
    peopleInRoom: true,
    isActive: false,
    createdByYou: true,
  },
  {
    roomName: "QA Review",
    peopleInRoom: false,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "UI/UX Feedback",
    peopleInRoom: true,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Sprint Planning",
    peopleInRoom: false,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "All Hands",
    peopleInRoom: true,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Standup",
    peopleInRoom: true,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Backend Sync",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Frontend Squad",
    peopleInRoom: false,
    isActive: false,
    createdByYou: true,
  },
  {
    roomName: "Bug Bash",
    peopleInRoom: true,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Strategy Room",
    peopleInRoom: false,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "UX Brainstorm",
    peopleInRoom: true,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Client Meeting",
    peopleInRoom: true,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Launch Prep",
    peopleInRoom: false,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Sales Sync",
    peopleInRoom: false,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Engineering Deep Dive",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Data Review",
    peopleInRoom: false,
    isActive: false,
    createdByYou: true,
  },
  {
    roomName: "User Interviews",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Growth Hackers",
    peopleInRoom: true,
    isActive: false,
    createdByYou: true,
  },
  {
    roomName: "Operations Room",
    peopleInRoom: false,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Team Check-in",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Night Owls",
    peopleInRoom: false,
    isActive: false,
    createdByYou: true,
  },
  {
    roomName: "Morning Sync",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
  {
    roomName: "Boardroom",
    peopleInRoom: false,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Weekly Digest",
    peopleInRoom: true,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Content Creators",
    peopleInRoom: true,
    isActive: true,
    createdByYou: true,
  },
  {
    roomName: "Beta Feedback",
    peopleInRoom: false,
    isActive: false,
    createdByYou: false,
  },
  {
    roomName: "Partner Collab",
    peopleInRoom: true,
    isActive: true,
    createdByYou: false,
  },
];

const WorkroomPage = (props: Props) => {
  const [searchQuery, setSearchQuery] = useState("");
  const [loading, setLoading] = useState(false);
  const route = useRouter();

  const filteredRooms = useMemo(() => {
    if (!searchQuery) return rooms;
    setLoading(true);
    const result = rooms.filter((room) =>
      room.roomName.toLowerCase().includes(searchQuery.toLowerCase())
    );
    setLoading(false);
    return result;
  }, [searchQuery]);

  return (
    <main className="py-12 px-10 flex flex-col gap-4">
      <header className="flex w-full justify-between items-center">
        <MainHeading variant="secondary">Workrooms</MainHeading>

        <div
          className="flex items-center gap-[clamp(0.625rem,_0.8547vw,_1.25rem)]"
          id="workroom-btns"
        >
          <Button className="w-[clamp(9.375rem,_5.4701vw,_13.375rem)] rounded-[16px] hover:bg-white bg-white text-[#956FD6] py-[clamp(0.625rem,_0.4274vw,_0.9375rem)] shadow px-[clamp(0.5rem,_0.2564vw,_0.6875rem)]">
            3 Workrooms
          </Button>
          <Button className="w-[clamp(6.25rem,_4.8718vw,_9.8125rem)] rounded-[16px] hover:bg-white bg-white text-[#956FD6] py-[clamp(0.625rem,_0.4274vw,_0.9375rem)] shadow px-[clamp(0.5rem,_0.2564vw,_0.6875rem)]">
            2 Active
          </Button>
          <Button
            className="flex space-x-2 bg-[#956FD6] rounded-[16px]"
            onClick={() => route.push("/workroom/create")}
          >
            <Plus size={24} color="white" />
            <span>Create Workroom</span>
          </Button>
        </div>
      </header>

      <section id="active-workroom" className="w-full flex flex-col gap-2">
        <header className="w-full flex items-center justify-between">
          <SubHeading className="">You&apos;re presently working on</SubHeading>
          <Button variant="ghost" size="icon">
            <Image src={BulletedList} alt="list" width={16} height={16} />
          </Button>
        </header>
        <div className="w-full h-[clamp(6.25rem,_3.6752vh,_8.9375rem)] rounded-[16px] card-morph border border-[#956FD6] p-[clamp(0.625rem,_0.5128vw,_1rem)] flex flex-col justify-between ">
          <section className="w-full flex items-center justify-between">
            <div className="flex flex-col gap-1">
              <MainHeading variant="bigCardTitle">Workroom Test 1</MainHeading>
              <Button
                variant="ghost"
                className="text-[#956FD6] w-fit p-0 h-0 text-[clamp(0.625rem,_0.5128vw,_1rem)]"
              >
                Edit workroom
              </Button>
            </div>
            <div
              className="w-[clamp(0.625rem,_0.5128vw,_1rem)] h-[clamp(0.625rem,_0.5128vh,_1rem)] bg-[#ADD359] animate-pulse rounded-full"
              id="active-indicator"
            />
          </section>
          <section
            id="active-card-bottom"
            className="w-full flex items-center justify-between"
          >
            <div className="flex items-center gap-2">
              <span className="flex items-center gap-1">
                <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
              </span>
              <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                Ada, Tim and Scott are in this workroom
              </p>
            </div>
            <div className="flex items-center gap-2">
              <Button className="h-[clamp(1.1rem,_0.6938vh,_1.6rem)] text-[clamp(0.625rem,_0.1709vw,_0.75rem)] rounded-[6px] bg-[#211451]">
                Join Workroom
              </Button>
              <Button variant="ghost" size="icon" className="w-fit p-0 h-0">
                <Image src={Trash} alt="list" width={13} height={15} />
              </Button>
            </div>
          </section>
        </div>
      </section>

      <section className="w-full pt-4">
        <Tabs defaultValue="workroom" className="w-full">
          <div className="w-full flex items-center justify-between">
            <TabsList>
              <TabsTrigger value="workroom">workroom</TabsTrigger>
              <TabsTrigger value="created">created by you</TabsTrigger>
              <TabsTrigger value="shared">shared workrooms</TabsTrigger>
            </TabsList>
            <Input
              type="search"
              placeholder="search rooms"
              className="h-9 w-[clamp(12.5rem,_15.6239vw,_21rem)]"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </div>
          {loading ? (
            <p>Searching...</p>
          ) : (
            <>
              <TabsContent
                value="workroom"
                className="w-full grid grid-cols-2 gap-4"
              >
                {filteredRooms.map((room, index) => (
                  <Link
                    href={`/workroom/room/${room.roomName
                      .toLowerCase()
                      .replace(/\s+/g, "-")}`}
                    key={index}
                  >
                    <div
                      className="w-full h-[clamp(6.25rem,_3.6752vh,_8.9375rem)] rounded-[16px] shadow-lg p-[clamp(0.625rem,_0.5128vw,_1rem)] flex flex-col justify-between"
                      key={index}
                    >
                      <header className="w-full flex items-center justify-between ">
                        <div className="flex flex-col gap-2">
                          <MainHeading variant="smallCardTitle"></MainHeading>
                          {room.roomName}
                          {room.createdByYou == false ? (
                            "Created by Ada"
                          ) : (
                            <Button
                              variant="ghost"
                              className="text-[#956FD6] w-fit p-0 h-0 text-[clamp(0.625rem,_0.5128vw,_1rem)]"
                            >
                              Edit workroom
                            </Button>
                          )}
                        </div>
                        <div
                          className="w-[clamp(0.625rem,_0.5128vw,_1rem)] h-[clamp(0.625rem,_0.5128vh,_1rem)] bg-[#ADD359] animate-pulse rounded-full"
                          id="active-indicator"
                        />
                      </header>
                      {room.peopleInRoom ? (
                        <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                          No one is in this workroom
                        </p>
                      ) : (
                        <section
                          id="active-card-bottom"
                          className="w-full flex items-center justify-between"
                        >
                          <div className="flex items-center gap-2">
                            <span className="flex items-center gap-1">
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                            </span>
                            <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                              Ada, Tim and Scott are in this workroom
                            </p>
                          </div>
                          <div className="flex items-center gap-2">
                            <Button
                              variant={"outline"}
                              className="h-[clamp(1.1rem,_0.6938vh,_1.6rem)] shadow-none text-[clamp(0.625rem,_0.1709vw,_0.75rem)] rounded-[6px] ring-[#211451]"
                            >
                              Join Workroom
                            </Button>
                            <Button
                              variant="ghost"
                              size="icon"
                              className="w-fit p-0 h-0"
                            >
                              <Image
                                src={Trash}
                                alt="list"
                                width={13}
                                height={15}
                              />
                            </Button>
                          </div>
                        </section>
                      )}
                    </div>
                  </Link>
                ))}
              </TabsContent>

              <TabsContent
                value="created"
                className="w-full grid grid-cols-2 gap-4"
              >
                {filteredRooms
                  .filter((room) => room.createdByYou)
                  .map((room, index) => (
                    <div
                      className="w-full h-[clamp(6.25rem,_3.6752vh,_8.9375rem)] rounded-[16px] shadow-lg p-[clamp(0.625rem,_0.5128vw,_1rem)] flex flex-col justify-between"
                      key={index}
                    >
                      <header className="w-full flex items-center justify-between ">
                        <div className="flex flex-col gap-2">
                          <MainHeading variant="smallCardTitle">
                            {room.roomName}
                          </MainHeading>
                          <Button
                            variant="ghost"
                            className="text-[#956FD6] w-fit p-0 h-0 text-[clamp(0.625rem,_0.5128vw,_1rem)]"
                          >
                            Edit workroom
                          </Button>
                        </div>
                        <div
                          className="w-[clamp(0.625rem,_0.5128vw,_1rem)] h-[clamp(0.625rem,_0.5128vh,_1rem)] bg-[#ADD359] animate-pulse rounded-full"
                          id="active-indicator"
                        />
                      </header>
                      {room.peopleInRoom ? (
                        <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                          No one is in this workroom
                        </p>
                      ) : (
                        <section
                          id="active-card-bottom"
                          className="w-full flex items-center justify-between"
                        >
                          <div className="flex items-center gap-2">
                            <span className="flex items-center gap-1">
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                            </span>
                            <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                              Ada, Tim and Scott are in this workroom
                            </p>
                          </div>
                          <div className="flex items-center gap-2">
                            <Button
                              variant="outline"
                              className="h-[clamp(1.1rem,_0.6938vh,_1.6rem)] shadow-none text-[clamp(0.625rem,_0.1709vw,_0.75rem)] rounded-[6px] ring-[#211451]"
                            >
                              Join Workroom
                            </Button>
                            <Button
                              variant="ghost"
                              size="icon"
                              className="w-fit p-0 h-0"
                            >
                              <Image
                                src={Trash}
                                alt="list"
                                width={13}
                                height={15}
                              />
                            </Button>
                          </div>
                        </section>
                      )}
                    </div>
                  ))}
              </TabsContent>

              <TabsContent
                value="shared"
                className="w-full grid grid-cols-2 gap-4"
              >
                {filteredRooms
                  .filter((room) => !room.createdByYou)
                  .map((room, index) => (
                    <div
                      className="w-full h-[clamp(6.25rem,_3.6752vh,_8.9375rem)] rounded-[16px] shadow-lg p-[clamp(0.625rem,_0.5128vw,_1rem)] flex flex-col justify-between"
                      key={index}
                    >
                      <header className="w-full flex items-center justify-between ">
                        <div className="flex flex-col gap-2">
                          <MainHeading variant="smallCardTitle">
                            {room.roomName}
                          </MainHeading>
                          <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                            Shared by Ada
                          </p>
                        </div>
                        <div
                          className="w-[clamp(0.625rem,_0.5128vw,_1rem)] h-[clamp(0.625rem,_0.5128vh,_1rem)] bg-[#ADD359] animate-pulse rounded-full"
                          id="active-indicator"
                        />
                      </header>
                      {room.peopleInRoom ? (
                        <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                          No one is in this workroom
                        </p>
                      ) : (
                        <section
                          id="active-card-bottom"
                          className="w-full flex items-center justify-between"
                        >
                          <div className="flex items-center gap-2">
                            <span className="flex items-center gap-1">
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                              <div className="w-[clamp(1rem,_0.6838vw,_1.5rem)] h-[clamp(1rem,_0.6838vh,_1.5rem)] bg-black rounded-full"></div>
                            </span>
                            <p className="text-[clamp(0.625rem,_0.1709vw,_0.75rem)] text-[#999999]">
                              Ada, Tim and Scott are in this workroom
                            </p>
                          </div>
                          <div className="flex items-center gap-2">
                            <Button
                              variant="outline"
                              className="h-[clamp(1.1rem,_0.6938vh,_1.6rem)] shadow-none text-[clamp(0.625rem,_0.1709vw,_0.75rem)] rounded-[6px] ring-[#211451]"
                            >
                              Join Workroom
                            </Button>
                            <Button
                              variant="ghost"
                              size="icon"
                              className="w-fit p-0 h-0"
                            >
                              <Image
                                src={Trash}
                                alt="list"
                                width={13}
                                height={15}
                              />
                            </Button>
                          </div>
                        </section>
                      )}
                    </div>
                  ))}
              </TabsContent>
            </>
          )}
        </Tabs>
      </section>
    </main>
  );
};

export default WorkroomPage;
